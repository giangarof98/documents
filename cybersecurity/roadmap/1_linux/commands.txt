
-Commands
    The top level of the Linux file system is the / directory, called ‘root’. Every other file and directory is contained within this directory.

    man         get the manual/how to use of a command
    whoaim      get the active username
    man         get the manual for a command
    touch       create a file
    echo        display a string provided by the user.
    ls          list the contents
    cat         short of concatenate. read the file content. only on small files.
    cp          copy a file
    mv          move a file
    rm          remove a file
    mkdir       make new directory (create new folder)
    pwd         print working directory
    cd          change directory
    file        display file type
    tree        display a visual representation of the directory structure
    history     list the previus used commands
    date        prints a timestamp of the current date and time
    cal         get the current calendary

    wc          word count
                wc -l front_desk.log network_closet.log server_room.log | sort -nr
                wc counts the number of lines, words and bytes

    >           Build files
    >>          Append files

    cron        time-based job scheduler. It allows users to schedule tasks or commands to run automatically at specified times or intervals. 
    crontab     edit or list crontab files for individual users. Schedule task.
                m h dom m dow command
                * *  *  *  *  echo "the date is: $(date)" >> /home/fstack/time.txt

    w or who    show who is logged in and where from
    toc         
    rev

    alias       Assign a command or a set of commands to a string.
                    alias name="command"
                make an alias permanent
                    vim/nano ~/.bashrc

    unalias     Unset an alias.


    nano        Default command line text editor, easy to use but lacks a lot of advance features
    vim         text editor

    chmod       modify individuals permissions
    chown       change owner

    groups      Display groups
    groudadd    Create a new group
    groupmod    Modify a existing group
    groupdel    Delete a group
    getent      Get information of users and groups

    stat        Display file status

    apt         Advance Package Tool
                sudo apt install -package 
                sudo apt remove -package

                sudo apt upgrade -upgradeTheRepo
                sudp apt update -upgradeTheSoftware
                sudo apt list --upgradable
                sudo apt show -packageInstalled

                apt search <search a piece of software>

                sudo dpkg -l        dpkg is a tool to install, build and remove package. -l gives the list of the packages

    top         Display the processes
    ps          Display a snapshot of the running processes.

    More        work better on large files. 
    less        display the file content one screen at a time. work better on large files.
    tail        preview a file's end.
    head        preview a file's beginning.
    Sort        Alphabetically sort a file.

    Grep        Search a file for a specific string of text and return any lines it appears on
                Dig through files and return only the pieces that we want
                Grep is pretty simple to use. You start with grep, then follow it with the word you would like 
                    to search for, and then end it with the file you would like to search in.

    Locate      Search command that looks into a pre-made database of filenames and outputs results.
                Is faster and more efficient when searching for files that have been recently added or changed, 
                but it may not find files that were added since the last update of the database. 
    Find        search command that will search for specific search terms in filenames.
    updatedb    Update the locate command's internal database. 


    awk         Search a file colomn by column and return specific text.

                Example: awk -F’:’ ‘{ print $1 $3 }’ somefile.txt

                    awk 
                        The command we are invoking
                    -F’:’ 
                        Designate the format of the column breaks. Here we are saying make a 
                        column break at each ‘:’. If you leave this part out, awk will break 
                        on whitespace (spaces, tabs, etc).
                    ‘{ print $1 $3 }’ 
                        What do we want to do with these columns? In this example, we are printing 
                        the first and third columns. You could print more or even include strings 
                        like this: ‘{ print $1.$2“@somedomain.com”}’. 
                        This might be used to build a list of email addresses. 
                        You can also use $NR to return the last column. There is much more 
                        we can do in this space. We will get more advanced later.
                    somefile.txt 
                        Where is awk going to get its data? In this example, it will look in somefile.txt.



    pipe |      Used to send the output of one command to the input of the next command.
                The | or pipe character is very useful in bash. It will take the output of 
                a command and send it to the input of the next command. 
                Use it to string multiple commands into what we call a "one-liner". 
                Security professionals use grep, awk, and pipe characters to search for 
                and pull interesting data out of files. 

    uniq        Take a sorted list and output all of the unique entries. Works with an input already sorted

    &&          logic operator. AND. rund one command if and only if another command succeds first
    ;           end of a command
    ||          OR
