Archiving Files

    zip and gzip are not uncommon in the Linux world, but the king of archiving and 
        compression is definitely tar. The tar command is a really old Linux utility 
        that takes its name from "Tape ARchive". An actual tape archive is getting rarer 
        and rarer these days, but the use of the tar command is still going strong. 
        Tar takes some getting used to, but once you master it, you will never want to go back.

        Archives created with tar are called tarballs and use the extension .tar. 
        Tar is an archiving tool that collects files together to produce one file; 
        on its own does not compress these files. However, we can use compression 
        algorithms with the tar command to create a smaller file size.

        Commands
            cf: Compress a file
            xf: Extract a file

            -cf: No compression
            -czf: gzip compression
            -cjf: bzip2 compression
            -cJf: xz compression

Reading File permissions

    -rwx r-x --- 1 root adm 71 Apr 1 12:04 access.log

        The first character (-): Either a - for files or a d for directory. 
            From this, we can see that the access.log is a file. 
        
        The owner (root): Has permission to read, write, and execute this file.

        Group (adm): Anyone in this group is allowed to read and execute this file, 
            but cannot write to it.

        Permissions (---): Permissions for anyone who is not root and is not in the adm group. 
            In this case, they have zero permissions. They are not allowed to interact with this file.


    Change owner file and group name
        sudo chown <owner name>:<group name> <filename>   
    Change group name
        sudo chmod :<group name> <filename>
    Change user owner
        sudo chmod <owner name> <filename>   

Symbolic and octal notation

    Chown is to change file ownership. 
        There are also times when we will want to update the permissions of the file or directory itself. 
        For example, if an important file in your organization is too open in terms of permissions, 
        it can be a target for hackers. There are two different ways to change permissions:

            Symbolic notation: Uses the letters r, w, and x to set, read, write, and execute permissions.

            Octal notation: Uses base-8 numbers to set file permissions. 

                We learned that execute allows a user to run a file. 
                This is typically relevant for program files; 
                i.e., files that you would need to execute in order for the program to run.

            Directories work a little differently. 
            The read permission allows a user to view the name of the directory. 
            The execute permission allows a user to change into that directory. 

    Chmod command
        Is used to modified also the files permissions
            chmod <some options here> filename

            u   user
            g   group 
            o   other(any user)

            + || -
            add or substract a permission

            r   read
            w   write
            x   execute

            You can mix and match options
             
                o-w    Remove write permissions from other
                u+rwx   Add all permissions for the user
                +x  Add the execute permission to the user, group, and other

        Binary Conversion
            


    