Object Oriented Programming
    programming paradigm

    Pilars of OOP

    Encapsulation
        It refers to the process of securing methods and data into a single unit.
        Describes the idea of bundling data and methods that work on that data within one unit, like a class.

    Abstration
        Handle complexity by hiding unnecessary details from the user.
        The users only interact with the basic implementation of the function, 
        but inner working is hidden. User is familiar with that "what function does" 
        but they don't know "how it does."

    Inheritance

    Polymorphism


    Everything is a object.
    It is used to structure a software program into simple, 
        reusable pieces of code blueprints (usually called classes), 
        which are used to create individual instances of objects.

    Objects are class instances

        master = True
        class Player:
            def __init__(self, name):
                self.name = name
            
            def run(self):
                print('run')
        
        player1 = Player()




        __init__:
            constructor

        Self:
            The self parameter is a reference to the current instance of the class, 
                and is used to access variables that belongs to the class.
            With this keyword, you can access the attributes and methods of the class in python.
            It does not have to be named self, you can call it whatever you like, 
                but it has to be the first parameter of any function in the class

        Attributes:
            Class Object Attributes
                Variables that are inherited by every object of a class. The value of class attributes remain the same for every new object.

            Instance Attributes
                Are class variables that allow us to define different values for each object of a class.

            @classmethod
                can access and modify the class state.
                takes the class as parameter to know about the state of that class.
                Is an expression that gets evaluated after your function is defined. 
                    result of that evaluation shadows your function definition. 
                    A class method receives the class as an implicit first argument, 
                    just like an instance method receives the instance.
                    
            @staticmethod
                Cannot access or modify the class state.
                Do not know about class state
                Is also a method that is bound to the class and not the object of the class. 
                    This method canâ€™t access or modify the class state. 
                    It is present in a class because it makes sense for the method to be present in class.

            
            